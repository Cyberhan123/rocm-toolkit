# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "CI"
  CI:
    # The type of runners that the job will run on
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        method: [local]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # npm cache
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm i

      - name: Build
        run: npm run build

      - name: Package
        run: npm run package

      - name: Run the action on this runner with method ${{matrix.method}}
        uses: ./
        with:
          rocm: '5.5.0'

      - name: Test if clang an clang++ is available
        run: |
          clang --version
          clang++ --version

      - name: List paths (windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          ls $env:ROCM_PATH
          ls $env:ROCM_PATH\bin
